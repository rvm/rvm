#!/usr/bin/env bash

if ! typeset -f rvm_pretty_print >/dev/null 2>&1
then source "${rvm_scripts_path:-"$rvm_path/scripts"}/functions/logging"
fi

rvm_warn "# In case of problems:"
rvm_log "#        run and read: rvm notes
#           read docs: http://rvm.io/
#          talk to us: http://webchat.freenode.net/?channels=rvm
#     read cheatsheet: http://cheat.errtheblog.com/s/rvm
#    watch screencast: http://screencasts.org/episodes/how-to-use-rvm
#   open a bug report: https://github.com/wayneeseguin/rvm/issues"

if [[ "$1" == "initial" ]]
then
  notes_type=Upgrade
  PAGER=\cat
  new_notes()
  {
    typeset file
    file="$rvm_path/config/displayed-notes.txt"
    \rm -f "${file}"
    tee "${file}" > /dev/null
  }
  important_message()
  {
    rvm_error "$@"
  }
  important_redirect()
  {
    \cat - >&2
  }
elif [[ "$1" == "upgrade" ]]
then
  notes_type=Upgrade
  PAGER=\cat
  new_notes()
  {
    typeset file
    file="$rvm_path/config/displayed-notes.txt"
    touch "${file}"
    tee "${file}.new" | (
      diff - "${file}" &&
      printf "  * No new notes to display.\n" >&2 ||
      true
    ) | sed '/^[^<]/ d ; s/^< //'
    printf "\n" >&2
    \mv -f "${file}.new" "${file}"
  }
  important_message()
  {
    rvm_error "$@"
  }
  important_redirect()
  {
    \cat - >&2
  }
else
  notes_type=Installation
  new_notes()
  {
    \cat
  }
  important_message()
  {
    rvm_warn "$@"
  }
  important_redirect()
  {
    \cat -
  }
fi

if [[ "$1" == "upgrade" ]]
then
  printf "%b" "
$notes_type Notes:

"
fi

# this block groups generated and static notes,
# to add generated msgs put them below in code
# for general messages put them in help/upgrade-notes.txt
{
  if [[ -z "$1" ]]
  then
    printf "%b" "
$notes_type Notes:

"
  fi

  if [[ "$rvm_path" == "/usr/local/rvm" ]] || (( UID == 0 ))
  then
    printf "%b" "
  * Please do NOT forget to add your users to the 'rvm' group.
    The installer no longer auto-adds root or users to the rvm group. Admins must do this.
    Also, please note that group memberships are ONLY evaluated at login time.
    This means that users must log out then back in before group membership takes effect!

"
  fi

  : \
    rvm_scripts_path:${rvm_scripts_path:-$rvm_path/scripts}:

  \cat "$rvm_path/help/upgrade-notes.txt" | sed \
   -e "s/\${SHELL}/${SHELL//\//\/}/g" \
   -e "s/\${rvm_scripts_path}/${rvm_scripts_path//\//\/}/g"

  printf "\n"

  if
    [[ ${rvm_ignore_dotfiles_flag:-0} == 0 ]] &&
    [[ -f /etc/profile.d/rvm.sh ]] &&
    ! GREP_OPTIONS="" \grep rvm_stored_umask /etc/profile.d/rvm.sh >/dev/null
  then
    important_message "
  * WARNING: your RVM loading script \`/etc/profile.d/rvm.sh\` is deprecated
    and causes you to have \`umask g+w\` set in your shell,
    run \`rvm get head --auto-dotfiles\` again to fix your scripts.
"
  fi

  if [[ "$rvm_path" == "/usr/share/ruby-rvm" ]]
  then
    important_message "
  * WARNING: You are using apt-get broken RVM, you should now:

      sudo apt-get --purge remove ruby-rvm
      sudo \rm -rf /usr/share/ruby-rvm /etc/rvmrc /etc/profile.d/rvm.sh

    open new terminal and validate environment is clean from old rvm settings:

      env | GREP_OPTIONS="" \grep rvm

    install RVM:

      curl -L https://get.rvm.io | bash -s stable --autolibs=enable

    for details check:

      http://stackoverflow.com/a/9056395/497756
"
  fi

  for __var in RUBYOPT RUBYLIB
  do
    if eval "[[ -n \"\${${__var}:-}\" ]]"
    then
      important_message "
  * WARNING: You have ${__var} set in your current environment.
    This may cause rubies to not work as you expect them to as it is not supported
    by all of them If errors show up, please try unsetting ${__var} first.
"
    fi
  done

  if
    [[ ${rvm_ignore_dotfiles_flag:-0} == 0 ]] &&
    [[ -f ~/.profile ]] && ! [[ "$rvm_path" == "/usr/local/rvm" || $UID == 0 ]] &&
    ! GREP_OPTIONS="" \grep 'source.*profile' ~/.bash_profile >/dev/null 2>&1 &&
    ! GREP_OPTIONS="" \grep 'source.*profile' ~/.bash_login >/dev/null 2>&1
  then
    important_message "
  * WARNING: You're using ~/.profile, make sure you load it,
    add the following line to ~/.bash_profile if it exists
    otherwise add it to ~/.bash_login:

      source ~/.profile
"
  fi

  if
    [[ -n "${ZSH_VERSION:-}" ]] || \which zsh >/dev/null
  then
    ( # make the ZSH_VERSION local to this piece of code
      : ${ZSH_VERSION:=$(zsh -c 'echo $ZSH_VERSION' 2>/dev/null)}
      typeset __zsh_version=$(( 65536 * ${ZSH_VERSION:0:1} + 256 * ${ZSH_VERSION:2:1} + ${ZSH_VERSION:4} ))
      if
        (( __zsh_version != 262924 && __zsh_version < 327680 ))
      then
        important_message "
  * WARNING: In case of using Zsh, version 4.3.12 / 5.0.0+ is recommended, you have $ZSH_VERSION, errors to be expected.
"
      fi
    )
  fi

  typeset -a __files
  __files=()
  for __file in ~/.zlogin ~/.zshrc ~/.bash_profile ~/.bashrc
  do
    if [[ -f "${__file}" ]]
    then __files+=( "${__file}" )
    fi
  done
  if
    [[ ${rvm_ignore_dotfiles_flag:-0} == 0 ]] &&
    (( ${#__files[@]} )) &&
    GREP_OPTIONS="" \grep -rn '^[^#]*PATH=' "${__files[@]}" |
      GREP_OPTIONS="" \grep -vE '[[:alnum:]_]PATH=|PATH=.*PATH'
  then
    # account for grep not showing file name for just one file checked
    if (( ${#__files[*]} == 1 ))
    then __file="Your '${__files[*]}'"
    else __file="Above files"
    fi
    important_message "
  * WARNING: ${__file} contains \`PATH=\` with no \`\$PATH\` inside, this can break RVM,
    for details check https://github.com/wayneeseguin/rvm/issues/1351#issuecomment-10939525
    to avoid this warning append #PATH.
"
  fi | important_redirect

  if [[ -n "${GEM_HOME:-}" ]] && ! [[ "${GEM_HOME}" =~ "$rvm_path/" ]]
  then
    important_message "
  * WARNING: you have GEM_HOME=\"${GEM_HOME}\" this is conflicting with RVM, make sure to:

      unset GEM_HOME
"
  fi

  if
    [[ -f /etc/rvmrc && -s /etc/rvmrc ]] &&
    GREP_OPTIONS="" \grep 'rvm_configure_env=.*/opt/sm' /etc/rvmrc >/dev/null 2>&1
  then
    important_message "
  * WARNING: you have 'rvm_configure_env' in /etc/rvmrc, run the following to fix:

      sudo sed -i'' -e \"/rvm_configure_env=.*\/opt\/sm/d\" /etc/rvmrc
      rvm autolibs smf
"
  fi

  if
    [[ -z "${rvm_ignore_gemrc_issues:-}" ]]
  then
    typeset _check _gemrc _found
    _found=0
    for _gemrc in "/etc/gemrc" "${HOME}/.gemrc"
    do
      if
        [[ -r "${_gemrc}" ]]
      then
        for _check in " -n" --user-install gemhome gempath
        do
          if
            GREP_OPTIONS="" \grep -E -- '^'"${_check}"'|^[^#]*'"${_check}" "${_gemrc}" >/dev/null
          then
            (( _found++ ))
            important_message "  * WARNING: Found ${_check} in ${_gemrc}, please remove it, as it will break rubygems in RVM."
          fi
        done
      fi
    done
    if
      (( _found ))
    then
      important_message "    If it is intended or a mistake 'export rvm_ignore_gemrc_issues=1' to avoid this warning.
"
    fi
  fi

  if
    [[ -x /usr/local/bin/rvm ]]
  then
    important_message "
  * WARNING: you have '/usr/local/bin/rvm', it's most likely a bug of old installation, in most cases it's safe to remove it:

    rm /usr/local/bin/rvm
"
  fi
} | new_notes | eval "${PAGER:-\cat}"
