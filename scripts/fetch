#!/usr/bin/env bash

url="$1"
archive="$2"

shift || rvm_fail "BUG: $0 called without an argument :/"

rvm_base_except="selector"
source "$rvm_scripts_path/base"

# handled by teardown - scripts/functions/environment:314
__rvm_cleanup_download()
{
  [[ -f "$archive" ]] && __rvm_rm_rf "$archive"
}

__rvm_cd "$rvm_archives_path"

[[ -n "$archive" ]] || archive=$(basename "$url")
fetch_command=( __rvm_curl --create-dirs -C - -o "${archive}" )

download=1
try_ftp=0
result=0
retry=0

__rvm_checksum_read "$url" "$archive"

__rvm_checksum_any || (( ${rvm_verify_downloads_flag:-0} > 0 )) ||
  rvm_fail "There is no checksum for '$url' or '$archive', it's not possible to validate it.
This could be because your RVM install's list of versions is out of date. You may want to
update your list of rubies by running 'rvm get stable' and try again.
If that does not resolve the issue and you wish to continue with unverified download
add '--verify-downloads 1' after the command.
"

if
  [[ -e "$archive" ]]
then
  # Check first if we have the correct archive
  if
    __rvm_checksum_validate_file "$rvm_archives_path/${archive}"
  then
    rvm_debug "Archive checksum matched, not downloading"
    download=0
  else
    case $? in
      (1) rvm_warn "Archive checksum not found, downloading again." ;;
      (*) rvm_warn "Archive checksum did not match, downloading again." ;;
    esac
    download=1
  fi
else
  rvm_debug "No archive, downloading"
  download=1
fi

if
  (( download > 0 ))
then
  \rm -f $archive
  if
    "${fetch_command[@]}" "$url"
  then
    true
  else
    result=$?
    case "$result" in
      (22|78)
        rvm_error "The requested url does not exist($result): '$url'"
        try_ftp=1
        ;;
      (18)
        rvm_error "Partial file($result). Only a part of the file was transferred. Removing partial and re-trying."
        \rm -f "$archive"
        retry=1
        ;;
      (33)
        rvm_debug "Server does not support 'range' command($result), removing '$archive'"
        \rm -f "$archive"
        retry=1
        ;;
      # duplication marker lfdgzkngdkjvnfjknkjvcnbjkncvjxbn
      (60)
        log "
Could not download '${_url}', you can read more about it here:
https://rvm.io/support/fixing-broken-ssl-certificates/
To continue in insecure mode run 'echo insecure >> ~/.curlrc'.
"
        ;;
      # duplication marker lfdgzkngdkjvnfjknkjvcnbjkncvjxbn
      (77)
        log "
It looks like you have old certificates, you can read more about it here:
https://rvm.io/support/fixing-broken-ssl-certificates/
"
        ;;
      # duplication marker lfdgzkngdkjvnfjknkjvcnbjkncvjxbn
      (141)
        rvm_warn "Curl returned 141 - it is result of a segfault which means it's Curls fault.
Try again and if it crashes more than a couple of times you either need to
reinstall Curl or consult with your distribution manual and contact support."
        ;;
      (*)
        rvm_error "There was an error($result), please check ${rvm_log_path}/$rvm_ruby_string/*.log. Next we'll try to fetch via http."
        try_ftp=1
        ;;
    esac
    if
      [[ $try_ftp -eq 1 ]]
    then
      rvm_log "Trying ftp:// URL instead."
      url="${url/http:/ftp:}"
    fi
    if
      [[ $try_ftp -eq 1 || $retry -eq 1 ]]
    then
      "${fetch_command[@]}" "$url"
      result=$?
    fi
    (( result == 0 )) ||
      rvm_fail "There was an error($result), please check ${rvm_log_path}/$rvm_ruby_string/*.log" $result
  fi
fi

# Check if we have downloaded the correct archive
if
  __rvm_checksum_validate_file "$rvm_archives_path/${archive}"
then
  rvm_debug "Downloaded archive checksum matched."
else
  result=$?
  if
   (( result==1 && ${rvm_verify_downloads_flag:-0}>0 ))
  then
    rvm_warn "No checksum for downloaded archive, recording checksum in user configuration."
    __rvm_checksum_calculate_file "$archive"
    __rvm_checksum_write          "$archive"
  elif
   (( result>1  && ${rvm_verify_downloads_flag:-0}>1 ))
  then
    rvm_warn "Downloaded archive checksum did not match!"
  elif
   (( result == 1 ))
  then
    rvm_fail "Downloaded archive checksum could not be verified!
If you wish to continue with unverified download add '--verify-downloads 1' after the command.
"
  else
    \rm -f $archive
    rvm_fail "Downloaded archive checksum did not match, archive was removed!
If you wish to continue with not matching download add '--verify-downloads 2' after the command.
"
  fi
fi
