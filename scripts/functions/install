#!/usr/bin/env bash

__rvm_record_install()
{
  [[ -n "$1" ]] || return

  typeset recorded_ruby_name rvm_install_record_file
  recorded_ruby_name="$("$rvm_scripts_path/tools" strings "$1")"
  rvm_install_record_file="$rvm_user_path/installs"

  [[ -f "$rvm_install_record_file" ]] || \touch "$rvm_install_record_file"
  sed -i"" "/^$recorded_ruby_name/d" "$rvm_install_record_file"

  #TODO: use `for` so  rvm_configure_flags are quoted properly
  printf "%b" "$recorded_ruby_name -- ${rvm_configure_flags[*]}\n" >> "$rvm_install_record_file"
}

__rvm_remove_install_record()
{
  typeset recorded_ruby_name rvm_install_record_file
  recorded_ruby_name="$("$rvm_scripts_path/tools" strings "$1")"
  rvm_install_record_file="$rvm_user_path/installs"

  if [[ -s "$rvm_install_record_file" ]]
  then sed -i"" "/^$recorded_ruby_name/d" "$rvm_install_record_file"
  fi
}

__rvm_recorded_install_command()
{
  typeset recorded_ruby_name recorded_ruby_match

  recorded_ruby_name="$("$rvm_scripts_path/tools" strings "$1")"
  recorded_ruby_name=${recorded_ruby_name%%${rvm_gemset_seperator:-"@"}*}

  [[ -z "$recorded_ruby_name" ]] && return 1

  recorded_ruby_match="^$recorded_ruby_name "

  if [[ -s "$rvm_user_path/installs" ]] \
    && GREP_OPTIONS="" \grep "$recorded_ruby_match" "$rvm_user_path/installs" >/dev/null 2>&1 ; then

    GREP_OPTIONS="" \grep "$recorded_ruby_match" < "$rvm_user_path/installs" | head -n1

  else
    return 1
  fi
  return $?
}
