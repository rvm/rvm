#!/usr/bin/env bash

requirements_find_osx_brew()
{
  if
    \which brew >/dev/null 2>&1
  then
    return 0
  else
    typeset __binary
    for __binary in ~/homebrew/bin/brew ~/.homebrew/bin/brew /usr/local/bin/brew
    do
      if
        [[ -f "${__binary}" && -s "${__binary}" && -x "${__binary}" ]]
      then
        # link to rvm_bin for easy adding to PATH
        ln -nfs "${__binary}" "${rvm_bin_path:-$rvm_path/bin}/brew"
        return 0
      fi
    done
    return 1
  fi
}

requirements_find_osx_port()
{
  if # find macports in PATH
    \which port >/dev/null 2>&1
  then
    return 0
  else # find macports out of PATH and link to rvm/bin
    typeset __binary
    for __binary in ~/opt/local/bin/port ~/.opt/local/bin/port /usr/local/bin/port /opt/local/bin/port
    do
      if
        [[ -f "${__binary}" && -s "${__binary}" && -x "${__binary}" ]]
      then
        # link to rvm_bin for easy adding to PATH
        ln -nfs "${__binary}" "${rvm_bin_path:-$rvm_path/bin}/port"
        return 0
      fi
    done
    return 1
  fi
}

requirements_find_osx_fink()
{
  if # find macports in PATH
    \which fink >/dev/null 2>&1
  then
    return 0
  else # find fink out of PATH and link to rvm/bin
    typeset __binary
    for __binary in ~/sw/bin/fink ~/.sw/bin/fink /usr/local/bin/fink /sw/bin/fink
    do
      if
        [[ -f "${__binary}" && -s "${__binary}" && -x "${__binary}" ]]
      then
        # link to rvm_bin for easy adding to PATH
        ln -nfs "${__binary}" "${rvm_bin_path:-$rvm_path/bin}/fink"
        return 0
      fi
    done
    return 1
  fi
}

requirements_find_smf()
{
  if # find SMF in PATH
    \which sm >/dev/null 2>&1
  then
    return 0
  else # find SMF out of PATH and link to rvm/bin
    typeset __binary
    for __binary in ~/.sm/bin/sm /opt/sm/bin/sm
    do
      if
        [[ -f "${__binary}" && -s "${__binary}" && -x "${__binary}" ]]
      then
        # link to rvm_bin for easy adding to PATH
        ln -nfs "${__binary}" "${rvm_bin_path:-$rvm_path/bin}/sm"
        return 0
      fi
    done
    return 1
  fi
}

requirements_osx()
{
  typeset __type
  for __type in osx_brew osx_port osx_fink smf # ...
  do
    if
      requirements_find_${__type}
    then
      __rvm_requirements_run ${__type} "$@" || return $?
      return 0
    fi
  done

  # fallback
  __rvm_requirements_run osx_brew "$@" || return $?
}
