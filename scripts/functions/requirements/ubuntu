#!/usr/bin/env bash

set -e

function requirements_apt()
{
  typeset -a command_to_run command_flags
  command_to_run=()
  command_flags=()

  while
    (( $# ))
  do
    case "$1" in
      (echo)
        command_to_run+=( $1 )
        shift
        ;;
      (run)
        shift
        ;;
      (force)
        command_flags+=( --quiet --yes )
        shift
        ;;
      (*)
        break
        ;;
    esac
  done

  (( UID == 0 )) || command_to_run+=( sudo )

  while
    (( $# ))
  do
    case "$1" in
      (update-system)
        "${command_to_run[@]}" apt-get "${command_flags[@]}" update
        ;;
      (rvm)
        "${command_to_run[@]}" apt-get --no-install-recommends "${command_flags[@]}" install bash curl git patch bzip2
        ;;
      (jruby*head)
        "${command_to_run[@]}" apt-get --no-install-recommends "${command_flags[@]}" install ant openjdk-6-jdk
        ;;
      (jruby*)
        "${command_to_run[@]}" apt-get --no-install-recommends "${command_flags[@]}" install curl g++ openjdk-6-jre-headless
        ;;
      (ir*)
        "${command_to_run[@]}" apt-get --no-install-recommends "${command_flags[@]}" install curl mono-2.0-devel
        ;;
      (opal)
        "${command_to_run[@]}" apt-get --no-install-recommends "${command_flags[@]}" install nodejs npm
        ;;
      (*)
        "${command_to_run[@]}" apt-get --no-install-recommends "${command_flags[@]}" install build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev libgdbm-dev ncurses-dev automake libtool bison subversion pkg-config libffi-dev
        ;;
    esac
    shift
  done
}

requirements_apt "$@"
