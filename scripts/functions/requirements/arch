#!/usr/bin/env bash

set -e

function requirements_arch()
{
  typeset -a command_to_run command_flags
  command_to_run=()
  command_flags=()

  while
    (( $# ))
  do
    case "$1" in
      (echo)
        command_to_run+=( $1 )
        shift
        ;;
      (run)
        shift
        ;;
      (force)
        command_flags+=( --noconfirm )
        shift
        ;;
      (*)
        break
        ;;
    esac
  done

  (( UID == 0 )) || command_to_run+=( sudo )

  while
    (( $# ))
  do
    case "$1" in
      (update-system)
        true
        ;;
      (rvm)
        "${command_to_run[@]}" pacman -SUy --needed --recursive "${command_flags[@]}" bash curl git patch
        ;;
      (jruby*head)
        "${command_to_run[@]}" pacman -SUy --needed --recursive "${command_flags[@]}" jdk7-openjdk jre7-openjdk curl apache-ant
        ;;
      (jruby*)
        "${command_to_run[@]}" pacman -SUy --needed --recursive "${command_flags[@]}" jdk7-openjdk jre7-openjdk curl
        ;;
      (ir*)
        "${command_to_run[@]}" pacman -SUy --needed --recursive "${command_flags[@]}" mono
        ;;
      (opal)
        "${command_to_run[@]}" pacman -SUy --needed --recursive "${command_flags[@]}" nodejs
        ;;
      (*)
        "${command_to_run[@]}" pacman -SUy --needed --recursive "${command_flags[@]}" gcc patch curl zlib readline libxml2 libxslt git autoconf automake diffutils make libtool bison subversion
        ;;
    esac
    shift
  done
}

requirements_arch "$@"
