#!/usr/bin/env bash

requirements_unknown_binaries()
{
  while
    (( $# ))
  do
    __rvm_which "$1" >/dev/null || missing_libs+=( "$1" )
    shift
  done
}

requirements_unknown_run()
{
  case "$1" in
    (update-system)
      echo "Always update your system first!"
      ;;
    (rvm)
      requirements_unknown_binaries bash curl patch
      ;;
    (jruby*head)
      requirements_unknown_binaries git
      missing_libs+=( openjdk ant )
      ;;
    (jruby*)
      missing_libs+=( openjdk )
      ;;
    (ir*)
      missing_libs+=( mono )
      ;;
    (opal)
      missing_libs+=( nodejs npm )
      ;;
    (*-head)
      requirements_unknown_binaries git
      missing_libs+=( build-essential openssl libreadline zlib1g libyaml libsqlite3 sqlite3 libxml2 libxslt autoconf libc6 libgdbm ncurses automake libtool bison pkg-config )
      ;;
    (*)
      missing_libs+=( build-essential openssl libreadline zlib1g libyaml libsqlite3 sqlite3 libxml2 libxslt autoconf libc6 libgdbm ncurses automake libtool bison pkg-config )
      ;;
  esac
}

requirements_unknown_wait_key()
{
  rvm_is_a_shell_function no_warning ||
  {
    rvm_error "
RVM was not able to detect your system type and does not know how to load extra library paths for your system (if it's needed), read:

    rvm help autolibs

for details how to disable this message.
"
    return 1
  }
  rvm_log "press any key to continue"
  typeset _read_char_flag anykey
  [[ -n "${ZSH_VERSION:-}" ]] && _read_char_flag=k || _read_char_flag=n
  builtin read -${_read_char_flag} 1 -s -r anykey
}

requirements_unknown_update_system()
{
  echo "Always update your system first!"
}

requirements_unknown_define()
{
  typeset __reqirement
  typeset -a missing_libs
  missing_libs=()
  for __reqirement
  do requirements_unknown_run "${__reqirement}"
  done
  echo "Install: ${missing_libs[*]}"
  requirements_unknown_wait_key || return $?
}
