#!/usr/bin/env bash

ironruby_install()
{
  builtin command -v mono > /dev/null ||
  {
    printf "%b" "mono must be installed and in your path in order to install IronRuby."
    return 1
  }

  mono_version="$(mono -V | head -n 1 | \grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -n 1 )"
  if
    [[ -n "${mono_version:-}" ]]
  then
    mono_major_ver="$(echo "$mono_version" | cut -d '.' -f1)"
    mono_minor_ver="$(echo "$mono_version" | cut -d '.' -f2)"
    if
      [[ $mono_major_ver -lt 2 ]] ||
      [[ $mono_major_ver -eq 2 && $mono_minor_ver -lt 6 ]]
    then
      printf "%b" "Mono 2.6 (or greater) must be installed and in your path in order to build IronRuby from the repository."
      printf "%b" "Version detected: ${mono_version}"
      return 1
    fi
  else
    printf "%b" "Cannot recognize mono version."
    return 1
  fi

  
  if
    (( ${rvm_head_flag:=0} == 1 ))
  then
    __rvm_ensure_has_mri_ruby

    __rvm_fetch_ruby || return $?

    __rvm_cd "${rvm_src_path}/$rvm_ruby_string/"
  else
    rvm_log "Retrieving IronRuby"

    "$rvm_scripts_path/fetch" "$rvm_ruby_url" "$rvm_ruby_package_file" ||
    {
      result=$?
      rvm_error "There has been an error while trying to fetch the source. \nHalting the installation."
      exit $result
    }

    mkdir -p "${rvm_src_path}/$rvm_ruby_string" "$rvm_ruby_home"

    __rvm_log_command "extract" "$rvm_ruby_string - #extracting $rvm_ruby_package_file to ${rvm_src_path}/$rvm_ruby_string" \
      __rvm_package_extract "${rvm_archives_path}/${rvm_ruby_package_file}" "${rvm_src_path}/$rvm_ruby_string" ||
    case $? in
      199)
        rvm_error "\nUnrecognized archive format '$archive_format'"
        return 199
        ;;
      *)
        rvm_error "There has been an error while trying to extract the source. Halting the installation."
        return 1
        ;;
    esac
    __rvm_cd "${rvm_src_path}/$rvm_ruby_string/IronLanguages-main-93ce72d"
  fi
  
  rvm_log "Building IronRuby"
  xbuild /p:Configuration=Release Solutions/Ruby.sln

  mkdir -p "$rvm_ruby_home"
  for dir in bin Languages Runtime
  do
    \cp -Rf $dir "$rvm_ruby_home/$dir"
  done

  if
    [[ -f "$rvm_ruby_home/bin/ir" ]]
  then
    sed -e '1,1s=.*=#!'"/usr/bin/env bash=" "$rvm_ruby_home/bin/ir" | \tr -d '\r' > "$rvm_ruby_home/bin/ir.new" &&
    \mv -f "$rvm_ruby_home/bin/ir.new" "$rvm_ruby_home/bin/ir"
  else
    echo "mono \"$rvm_ruby_home/bin/Release/ir.exe\" \"\$@\"" > "$rvm_ruby_home/bin/ir"
  fi

  chmod +x "$rvm_ruby_home/bin/ir"

  ln -fs "$rvm_ruby_home/bin/ir" "$rvm_ruby_home/bin/ruby"

  (
    rvm_create_flag=1 __rvm_use
  )

  builtin hash -r

#  __rvm_run "gems.install" \
#    "PATH=\"$rvm_ruby_gem_home/bin:$rvm_ruby_global_gems_path/bin:$rvm_ruby_home/bin:$PATH\" GEM_HOME=\"$rvm_ruby_gem_home\" GEM_PATH=\"$rvm_ruby_gem_home:$rvm_ruby_global_gems_path\" $rvm_ruby_home/bin/gem install --no-rdoc --no-ri rake $rvm_gem_options" \
#    "Installing $rvm_gem_name to $dir" || true
}
