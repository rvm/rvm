#!/usr/bin/env bash

ruby_install_baseruby_check()
{
  __rvm_ensure_has_mri_ruby || return $?
  typeset compatible_baseruby
  if
    compatible_baseruby="$rvm_wrappers_path/$(__rvm_mri_ruby)/ruby" &&
    [[ -x "$compatible_baseruby" ]]
  then
    rvm_configure_flags+=( --with-baseruby="$compatible_baseruby" )
  else
    return $?
  fi
}

ruby_install()
{
  typeset result temp_flags _iterator

  case ${rvm_ruby_string:-""} in
    ruby-1.8.*-head)
      __rvm_ensure_has_mri_ruby "ruby-1.8.|ree-" || return $?
      ;;
    ruby-1.8.*)
      if (( ${rvm_head_flag:-0} == 1 ))
      then __rvm_ensure_has_mri_ruby "ruby-1.8.|ree-" || return $?
      fi
      ;;
    ruby*-head)
      ruby_install_baseruby_check || return $?
      ;;
    ruby*)
      if (( ${rvm_head_flag:-0} == 1 ))
      then ruby_install_baseruby_check || return $?
      fi
      ;;
  esac

  # TODO: needed on some 1.9.3, confirm with http://bugs.ruby-lang.org/issues/6903
  if
    [[ " ${rvm_configure_flags[*]}" =~ " --enable-load-relative" ]]
  then
    case ${rvm_ruby_string} in
      ruby-1.9.3-p125|ruby-1.9.3-p286|ruby-1.9.3-p327|ruby-1.9.3-p362|ruby-1.9.3-p374|ruby-1.9.3-p385)
        rvm_patch_names+=( ruby-multilib )
        ;;
    esac
  fi


  (
    __rvm_setup_compile_environment "${rvm_ruby_string}" &&
    __rvm_install_source $* &&
    if
      ! __ruby_clang_ok ${rvm_ruby_string} &&
      [[ -n "${initially_selected_compiler:-}" ]] &&
      __rvm_compiler_is_llvm "${initially_selected_compiler:-}"
    then
      rvm_warn "Ruby '${rvm_ruby_string}' was built using clang - but it's not (fully) supported, expect errors."
    fi
  ) || return $?

  typeset patches_count
  patches_count=$(
    rvm_ruby_string="${rvm_ruby_string}" "$rvm_scripts_path/patchsets" show default | wc -l
  )

  typeset _default _version _patch _memo
  _default=$(__rvm_db "default_ruby")
  _version=$(__rvm_db "${_default}_version")
  _patch=$(__rvm_db "${_default}_${_version}_patch_level")
  _version="${_default}-${_version}${_patch:+-}${_patch:-}"
  _memo="Please consider upgrading to ${_version} which will have all of the latest security patches."
  if
    [[ "${rvm_ruby_string}" =~ "ruby-1.8" ]]
  then
    rvm_error "WARNING: Please be aware that you just installed ruby that is no more supported, more details here:

    http://www.ruby-lang.org/en/news/2013/06/30/we-retire-1-8-7/

${_memo}"

  elif
    [[ ! "${rvm_ruby_string}" =~ "${_version}" ]] && (( patches_count > 0 ))
  then
    rvm_warn "Please be aware that you just installed a ruby that requires ${patches_count} patches just to be compiled on up to date linux system.
This may have known and unaccounted for security vulnerabilities.
${_memo}"
  fi
}

__rvm_post_configure_ruby()
{
  typeset option
  if
    (( ${rvm_static_flag:-0} == 1 ))
  then
    for option in 'option nodynamic' openssl psych zlib readline
    do
      __rvm_update_ext_setup ${option}
    done
  fi
}

__rvm_update_ext_setup()
{
  echo "extension setup: $1"
  if
    __rvm_grep "$1" ext/Setup >/dev/null
  then
    __rvm_sed_i ext/Setup -e "s/#$1/$1/"
  else
    echo "$1" >> ext/Setup
  fi
}
