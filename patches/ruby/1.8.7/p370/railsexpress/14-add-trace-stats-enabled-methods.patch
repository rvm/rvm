diff --git a/gc.c b/gc.c
index 57740d2..2c34932 100644
--- a/gc.c
+++ b/gc.c
@@ -350,6 +350,22 @@ rb_gc_disable_stats()
 
 /*
  *  call-seq:
+ *     GC.stats_enabled?    => true or false
+ *
+ *  Check whether GC stats have been enabled.
+ *
+ *     GC.stats_enabled?   #=> false or true
+ *
+ */
+
+VALUE
+rb_gc_stats_enabled()
+{
+    return gc_statistics ? Qtrue : Qfalse;
+}
+
+/*
+ *  call-seq:
  *     GC.clear_stats    => nil
  *
  *  Clears garbage collection statistics, returning nil. This resets the number
@@ -491,6 +507,22 @@ rb_gc_disable_trace()
     return old;
 }
 
+/*
+ *  call-seq:
+ *     GC.trace_enabled?    => true or false
+ *
+ *  Check whether GC tracing has been enabled.
+ *
+ *     GC.trace_enabled?   #=> false or true
+ *
+ */
+
+VALUE
+rb_gc_trace_enabled()
+{
+    return verbose_gc_stats ? Qtrue : Qfalse;
+}
+
 char* GC_LOGFILE_IVAR = "@gc_logfile_name";
 
 /*
@@ -2887,6 +2919,7 @@ Init_GC()
 
     rb_define_singleton_method(rb_mGC, "enable_stats", rb_gc_enable_stats, 0);
     rb_define_singleton_method(rb_mGC, "disable_stats", rb_gc_disable_stats, 0);
+    rb_define_singleton_method(rb_mGC, "stats_enabled?", rb_gc_stats_enabled, 0);
     rb_define_singleton_method(rb_mGC, "clear_stats", rb_gc_clear_stats, 0);
     rb_define_singleton_method(rb_mGC, "allocated_size", rb_gc_allocated_size, 0);
     rb_define_singleton_method(rb_mGC, "num_allocations", rb_gc_num_allocations, 0);
@@ -2902,6 +2935,7 @@ Init_GC()
     rb_define_singleton_method(rb_mGC, "log_file", rb_gc_log_file, -1);
     rb_define_singleton_method(rb_mGC, "enable_trace", rb_gc_enable_trace, 0);
     rb_define_singleton_method(rb_mGC, "disable_trace", rb_gc_disable_trace, 0);
+    rb_define_singleton_method(rb_mGC, "trace_enabled?", rb_gc_trace_enabled, 0);
 
     rb_mObSpace = rb_define_module("ObjectSpace");
     rb_define_module_function(rb_mObSpace, "each_object", os_each_obj, -1);
